<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Web3 Wallet</title>
  <style>
    /* General Styles */
    body {
      margin: 0;
      font-family: 'Inter', sans-serif;
      background-color: #000;
      color: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .wallet-container {
      background-color: #111;
      border-radius: 20px;
      padding: 20px;
      width: 350px;
      box-shadow: 0 0 20px rgba(138, 43, 226, 0.5);
    }

    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .logo {
      font-size: 1.5rem;
      font-weight: bold;
      color: #8A2BE2;
    }

    .profile-icon {
      font-size: 1.2rem;
      cursor: pointer;
    }

    .balance {
      text-align: center;
      margin-bottom: 20px;
    }

    .balance h1 {
      font-size: 2.5rem;
      margin: 0;
    }

    .balance p {
      color: #888;
      margin: 0;
    }

    .actions {
      display: flex;
      justify-content: space-around;
      margin-bottom: 20px;
    }

    .action-btn {
      background: none;
      border: 2px solid #8A2BE2;
      color: #fff;
      padding: 10px 20px;
      border-radius: 50px;
      cursor: pointer;
      font-size: 1rem;
      transition: all 0.3s ease;
    }

    .action-btn:hover {
      background: #8A2BE2;
      transform: scale(1.05);
      box-shadow: 0 0 15px #8A2BE2;
    }

    .transactions {
      margin-bottom: 20px;
    }

    .transactions h3 {
      margin-bottom: 10px;
    }

    .transactions ul {
      list-style: none;
      padding: 0;
    }

    .transactions li {
      background: #222;
      padding: 10px;
      border-radius: 10px;
      margin-bottom: 5px;
    }

    #view-all-btn {
      background: #8A2BE2;
      border: none;
      color: #fff;
      padding: 10px 20px;
      border-radius: 50px;
      cursor: pointer;
      width: 100%;
    }

    .screen {
      display: none;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: #000;
      padding: 20px;
      border-radius: 20px;
    }

    .screen h2 {
      margin-top: 0;
    }

    .screen input {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 10px;
      border: 1px solid #8A2BE2;
      background: #111;
      color: #fff;
    }

    .screen button {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 10px;
      border: none;
      background: #8A2BE2;
      color: #fff;
      cursor: pointer;
    }

    .screen button:hover {
      background: #9B30FF;
    }

    /* Updated Connect Button Styles */
    #connect-wallet-btn {
      background-color: #6a0dad; /* Purple color */
      color: white; /* Text color */
      padding: 10px 20px;
      border-radius: 10px;
      font-size: 1rem;
      cursor: pointer;
      border: none;
      transition: background-color 0.3s ease;
    }

    #connect-wallet-btn:hover {
      background-color: #9b30ff; /* Lighter purple on hover */
    }
  </style>
</head>
<body>
  <div class="wallet-container">
    <!-- Header -->
    <header>
      <div class="logo">Web3 Wallet</div>
      <div class="profile-icon" id="connect-wallet-btn">Connect</div>
    </header>

    <!-- Balance Display -->
    <div class="balance">
      <h1 id="balance">0.00 LERN</h1>
      <p id="fiat-value">$0.00 USD</p>
    </div>

    <!-- Action Buttons -->
    <div class="actions">
      <button id="send-btn" class="action-btn">↑ Send</button>
      <button id="receive-btn" class="action-btn">↓ Receive</button>
      <button id="history-btn" class="action-btn">⌛ History</button>
    </div>

    <!-- Recent Transactions -->
    <div class="transactions">
      <h3>Recent Transactions</h3>
      <ul id="transaction-list">
        <li>No transactions yet.</li>
      </ul>
      <button id="view-all-btn">View All</button>
    </div>

    <!-- Send Screen (Hidden by Default) -->
    <div id="send-screen" class="screen">
      <h2>Send Tokens</h2>
      <input type="text" id="recipient-address" placeholder="Recipient Address">
      <input type="number" id="send-amount" placeholder="Amount">
      <button id="confirm-send-btn">Confirm Send</button>
      <button id="cancel-send-btn">Cancel</button>
    </div>

    <!-- Receive Screen (Hidden by Default) -->
    <div id="receive-screen" class="screen">
      <h2>Receive Tokens</h2>
      <div class="qr-code" id="qr-code">QR Code Placeholder</div>
      <p id="wallet-address">0x1234...5678</p>
      <button id="copy-address-btn">Copy Address</button>
      <button id="cancel-receive-btn">Cancel</button>
    </div>
  </div>

  <!-- Ethers.js -->
  <script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js"></script>
  <script>
    // DOM Elements
    const balanceElement = document.getElementById('balance');
    const fiatValueElement = document.getElementById('fiat-value');
    const sendBtn = document.getElementById('send-btn');
    const receiveBtn = document.getElementById('receive-btn');
    const historyBtn = document.getElementById('history-btn');
    const sendScreen = document.getElementById('send-screen');
    const receiveScreen = document.getElementById('receive-screen');
    const cancelSendBtn = document.getElementById('cancel-send-btn');
    const cancelReceiveBtn = document.getElementById('cancel-receive-btn');
    const confirmSendBtn = document.getElementById('confirm-send-btn');
    const copyAddressBtn = document.getElementById('copy-address-btn');
    const walletAddressElement = document.getElementById('wallet-address');
    const connectWalletBtn = document.getElementById('connect-wallet-btn');
    const transactionList = document.getElementById('transaction-list');
    const viewAllBtn = document.getElementById('view-all-btn');

    // Web3 Provider
    let provider;
    let signer;
    let userAddress;

    // Connect Wallet
    connectWalletBtn.addEventListener('click', async () => {
      if (window.ethereum) {
        try {
          await window.ethereum.request({ method: 'eth_requestAccounts' });
          provider = new ethers.providers.Web3Provider(window.ethereum);
          signer = provider.getSigner();
          userAddress = await signer.getAddress();
          walletAddressElement.textContent = userAddress;
          connectWalletBtn.textContent = `Connected: ${userAddress.slice(0, 6)}...${userAddress.slice(-4)}`;
          updateBalance();
        } catch (err) {
          console.error('Error connecting wallet:', err);
        }
      } else {
        alert('Please install MetaMask!');
      }
    });

    // Update Balance
    async function updateBalance() {
      if (provider && userAddress) {
        const balanceWei = await provider.getBalance(userAddress);
        const balanceLERN = ethers.utils.formatEther(balanceWei);
        balanceElement.textContent = `${parseFloat(balanceLERN).toFixed(4)} LERN`;
        // Mock fiat value (1 LERN = $2000)
        fiatValueElement.textContent = `$${(parseFloat(balanceLERN) * 2000).toFixed(2)} USD`;
      }
    }

    // Send Tokens
    confirmSendBtn.addEventListener('click', async () => {
      const recipient = document.getElementById('recipient-address').value;
      const amount = document.getElementById('send-amount').value;

      if (recipient && amount) {
        try {
          const tx = await signer.sendTransaction({
            to: recipient,
            value: ethers.utils.parseEther(amount),
          });
          await tx.wait();
          updateBalance();
          transactionList.innerHTML = `<li>Sent ${amount} LERN to ${recipient}</li>` + transactionList.innerHTML;
          sendScreen.style.display = 'none';
        } catch (err) {
          console.error('Error sending transaction:', err);
        }
      }
    });

    // Copy Wallet Address
    copyAddressBtn.addEventListener('click', () => {
      navigator.clipboard.writeText(userAddress);
      alert('Address copied to clipboard!');
    });

    // Show/Hide Screens
    sendBtn.addEventListener('click', () => (sendScreen.style.display = 'block'));
    receiveBtn.addEventListener('click', () => (receiveScreen.style.display = 'block'));
    cancelSendBtn.addEventListener('click', () => (sendScreen.style.display = 'none'));
    cancelReceiveBtn.addEventListener('click', () => (receiveScreen.style.display = 'none'));

    // Fetch Transactions
    async function fetchTransactions() {
      try {
        const response = await fetch(`https://api.etherscan.io/api?module=account&action=txlist&address=${userAddress}&startblock=0&endblock=99999999&sort=desc&apikey=J95TKSM8QWBGJV6SY51QRKHKVQB1R8B2C6`);
        const data = await response.json();
        if (data.status === '1') {
          const transactions = data.result;
          transactionList.innerHTML = transactions.map(tx => {
            return `<li>${tx.hash.slice(0, 6)}...${tx.hash.slice(-4)} - ${ethers.utils.formatEther(tx.value)} LERN</li>`;
          }).join('');
        }
      } catch (err) {
        console.error('Error fetching transactions:', err);
      }
    }

    // View All Transactions
    viewAllBtn.addEventListener('click', fetchTransactions);
  </script>
</body>
</html>
